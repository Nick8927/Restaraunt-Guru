import asyncio
from playwright.async_api import async_playwright
from bs4 import BeautifulSoup
import re
import os


"""
–ú–æ–¥—É–ª—å –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫.

–û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
- –ß—Ç–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞ restaraunt_vitebsk_clean (—Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è parser).
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Playwright –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü.
- –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –∏ –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤.
- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏.
- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ markdown-—Ñ–∞–π–ª.

–ó–∞–ø—É—Å–∫:
```python
asyncio.run(parse_restaurant_phone_numbers("restaurants_vitebsk_clean.md", "restaurant_phones.md"))"""


output_dir = "output_files"
os.makedirs(output_dir, exist_ok=True)

output_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), "..", "output_files"))


async def parse_restaurant_phone_numbers(md_file_path, output_file):
    """
    –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–∞—Ä—Å–∏—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫ –≤ restaraunts_vitebsk_clean —Ñ–∞–π–ª–µ
     –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    """
    restaurant_links = read_restaurant_links_from_md(md_file_path)

    results = []
    async with async_playwright() as p:
        browser = await p.chromium.launch(
            executable_path=r"C:\Program Files\Google\Chrome\Application\chrome.exe",
            headless=True
        )

        for index, (name, link) in enumerate(restaurant_links, start=1):
            try:
                print(f"üîç [{index}] –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: {name} ({link})")
                context = await browser.new_context(
                    user_agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36",
                    extra_http_headers={"Accept-Language": "en-US,en;q=0.9"}
                )
                page = await context.new_page()

                if await load_page_with_retry(page, link):
                    html = await page.content()
                    soup = BeautifulSoup(html, "html.parser")
                    phone_tag = soup.find("a", href=re.compile(r"tel:\+?\d+"))

                    if phone_tag:
                        phone_number = phone_tag.get_text(strip=True)
                        print(f"üìû [{index}] –ù–∞–π–¥–µ–Ω –Ω–æ–º–µ—Ä: {phone_number}")
                        clean_name = name.strip("[]")  # —É–±–∏—Ä–∞–µ–º —Å–∫–æ–±–∫–∏ –∏–∑ –∏—Å—Ö.—Ñ–∞–π–ª–∞
                        results.append(f"{index}. **{clean_name}**: {phone_number}")
                    else:
                        print(f"‚ö†Ô∏è [{index}] –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                        results.append(f"{index}. **{clean_name}**: ‚ùå –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")

                    await page.close()
                else:
                    print(f"‚ö†Ô∏è [{index}] –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É {name}")
                    results.append(f"{index}. **{clean_name}**: ‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")

            except Exception as e:
                print(f"‚ùå [{index}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {name}: {e}")
                results.append(f"{index}. **{clean_name}**: ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ")

        await browser.close()

    save_results_to_md(output_file, results)
    print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {output_file}")


async def load_page_with_retry(page, url, retries=2):
    """
    –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø–æ–≤—Ç–æ—Ä–æ–º –ø—Ä–∏ –æ—à–∏–±–∫–µ.
    """
    for attempt in range(retries):
        try:
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –¥–ª—è {url}")
            await page.goto(url, timeout=90000)
            await page.wait_for_selector('a[href^="tel:"]', timeout=60000)
            return True
        except Exception as e:
            print(f"–ü–æ–ø—ã—Ç–∫–∞ {attempt + 1} –Ω–µ —É–¥–∞–ª–∞—Å—å –¥–ª—è {url}: {e}")
            await asyncio.sleep(5)
    return False


def read_restaurant_links_from_md(md_file_path):
    """
    –ß–∏—Ç–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏–∑ markdown-—Ñ–∞–π–ª–∞.
    """
    links = []
    with open(md_file_path, "r", encoding="utf-8") as file:
        for line in file:
            match = re.search(r"\[(.*?)\]\((https://restaurantguru\.ru/.*?)\)", line)
            if match:
                links.append((match.group(1), match.group(2)))
    return links


def save_results_to_md(output_file, results):
    """
    –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤ parsed_phone_numbers.md —Ñ–∞–π–ª.
    """
    with open(output_file, "w", encoding="utf-8") as file:
        file.write("# –ù–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤\n\n")
        file.write("\n".join(results))


def main():
    md_file_path = "restaurants_vitebsk_clean.md"
    output_file = os.path.join(output_dir, "parsed_phone_numbers.md")
    asyncio.run(parse_restaurant_phone_numbers(md_file_path, output_file))



if __name__ == "__main__":
    main()
